---
name: PR

on:
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  FORCE_COLOR: "1"
  POETRY_VERSION: "1.6.1"

jobs:
  code-checks:
    name: Code Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - run: curl -sSL https://install.python-poetry.org | python3 - --version $POETRY_VERSION
      - run: poetry install
      - run: make fmt-check
      - run: make docs-build
      - run: make type-check
      - run: make test-coverage

  build-image:
    name: Build image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.repository }}:${{ env.GITHUB_SHA }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ env.IMAGE_NAME }}
          outputs: type=docker,dest=/tmp/${{ env.IMAGE_NAME }}.tar
      - uses: actions/upload-artifact@v3
        with:
          name: 
          path: /tmp/${{ env.IMAGE_NAME }}.tar

  push-image:
    name: Push image
    runs-on: ubuntu-latest
    needs: [code-checks, build-image]
    env:
      IMAGE_NAME: ${{ github.repository }}:${{ env.GITHUB_SHA }}
      FULLY_QUALIFIED_IMAGE_NAME: ${{ env.RECIPES_CR }}${{ env.IMAGE_NAME }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.IMAGE_NAME }}.tar
          path: /tmp
      - uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_CI }}
      - run: doctl registry login
      - run: docker load --input /tmp/$IMAGE_NAME.tar
      - run: docker tag $IMAGE_NAME $FULLY_QUALIFIED_IMAGE_NAME
      - run: docker push $FULLY_QUALIFIED_IMAGE_NAME
