---
name: PR

on:
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  FORCE_COLOR: "1"
  POETRY_VERSION: "1.6.1"

jobs:
  vars:
    name: Set environment variables
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.sha_short.outputs.sha_short }}
      image_name: ${{ steps.image_name.outputs.image_name }}
    steps:
      - uses: actions/checkout@v3
      - id: sha_short
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - id: image_name
        run: echo "image_name=$RECIPES_CR${{ github.repository }}" >> "$GITHUB_OUTPUT"

  code-checks:
    name: Code Checks
    runs-on: ubuntu-latest
    needs: vars
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - run: curl -sSL https://install.python-poetry.org | python3 - --version $POETRY_VERSION
      - run: poetry install
      - run: make fmt-check
      - run: make docs-build
      - run: make type-check
      - run: make test-coverage

  build-image:
    name: Build image
    runs-on: ubuntu-latest
    needs: vars
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - run: docker buildx build -o type=docker,dest=- . > /tmp/image.tar
      - uses: actions/upload-artifact@v3
        with:
          name: image
          path: /tmp/image.tar

  push-image:
    name: Push image
    runs-on: ubuntu-latest
    needs: [code-checks, build-image]
    env:
      sha_short: ${{ needs.vars.outputs.sha_short}}
      image_name: ${{ needs.vars.outputs.image_name }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp
      - uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_CI }}
      - run: doctl registry login
      - run: docker load --input /tmp/image.tar
      - run: docker tag $(docker image ls --format "{{ .ID }}") $image_name:$sha_short 
      - run: docker push $image_name:$sha_short
